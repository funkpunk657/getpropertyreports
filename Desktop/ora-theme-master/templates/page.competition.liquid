{% comment %}
Re-use the 'rte' class wherever you output content that was added by a merchant using
the Rich Text Editor ( 'rte' stands for rich text editor ).
Style all HTML elements in that content the same way across the board.
Use the 'rte' class in your CSS to help maintain that consistency.
Example: the h2 element should have the same size and color in:
- product descriptions
- collection descriptions
- 'page' pages' content
- blog post
{% endcomment %}

<div class="rte">
	{% assign background_image = page.metafields["image"].url %}
	{% assign referrer = page.metafields["referrer"].value %}
	<div class="wrapper" style="background-image: url('{{ background_image }}');">
		<div class="competition-info">
		  {{ page.content }}
		  <form id="form3" name="form3" class="wufoo topLabel page" accept-charset="UTF-8" autocomplete="off" enctype="multipart/form-data" method="post" novalidate action="https://oraorganic.wufoo.com/forms/q1boodxh1f6nbuk/#public">
			  <input type="hidden" id="idstamp" name="idstamp" value="uFg85QbySKRO92K0u71EuqdLXeN6d2GkIlfx1SGdc4c=" />
				<div class="input-group">
					<input id="Field1" name="Field1" type="email" class="email form-control" name="contact[email]" placeholder="Enter your e-mail address" /> 
					<span class="input-group-btn"> <input id="saveForm" name="saveForm" class="submit flat aqua inactive" type="submit" value="ENTER" /> </span>
					<input id="Field3" name="Field3" type="text" style="display: none;" class="field text medium" maxlength="255" tabindex="2" onkeyup="" value="{{ referrer }}"/>
				</div>
				<div class="errors" style="display: none;">
					<p class="text-accent-2"><strong>Whoops!</strong> That e-mail looks to be incorrect. Please try again.</p>
				</div>
				{% if form.posted_successfully? %}
					<script>
					window.location = "/pages/kg-body-thanks";
					</script>
				{% endif %}
				{% if form.errors %}
					<script>
					window.location = "#invalid_e-mail"
					</script>
				{% endif %}
			</form>
		</div>
	</div>
  <style>
  	.competition-info {
  		position: absolute;
  		left: 1%;
  		right: 1%;
			top: 50%;
			-webkit-transform: translateY(-50%);
			-ms-transform: translateY(-50%);
			transform: translateY(-50%);
			background-color: white;
			box-shadow: 0px 1px 2px 0px rgba(135,135,135,0.70);
			width: 720px;
			margin: 0 auto;
			text-align: center;
			padding: 30px 90px;
  	}
  	.competition-info h2 {
  		margin: 15px 0 30px;
  	}
  	.competition-info h5 {
  		font-size: 16px;
  		line-height: 1.6em;
  		margin-bottom: 15px;
  	}
  	.competition-info form {
  		width: 0;
  		margin: 30px auto 15px;
  		display: table;
  	}
  	.competition-info .input-group input {
  		width: 270px;
  		height: 52px;
  		margin: 0;
  	}
  	.competition-info .input-group input.email {
  		border: 1px solid #F4F4F4;
  		outline: none;
  		box-shadow: none;
  		font-family: 'Avenir', sans-serif;
  		border-radius: 0;
  	}
  	.competition-info .input-group input.submit {
  		width: 150px;
  	}
  	.competition-info .errors {
  		margin-top: 15px;
  	}
  	@media (max-width: 767px) {
  		.competition-info {
  			width: 100%;
  			left: 0;
  			right: 0;
  			padding: 30px 15px;
  		}
  		.competition-info h5 { font-size: 14px; }
  		.competition-info .input-group input.email  { width: 180px; font-size: 12px; }
  		.competition-info .input-group input.submit { width: 90px; font-size: 12px; } 
  	}
  </style>

</div>
<!-- START GENERIC STYLES & SCRIPTS FOR TEMPLATE -->
<style>
	.site {
		height: 100%;
		margin: 0;
	}
	#main, .rte, .wrapper {
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
	}
	.wrapper {
		background-size: cover;
		background-repeat: no-repeat;
		background-position: center;
	}
	footer {
		display: none !important;
	}
  	
</style>
<script>
	$(document).ready(function() {
		$('header').addClass('top');
		// Email Validation
		function validateEmail(email) {
		    var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
		    return re.test(email);
		}
		$('.email').on('change paste keyup', function() {
			if (validateEmail($(this).val()) == true) {
				$('#saveForm').removeClass('inactive');
			} else {
				$('#saveForm').addClass('inactive');
			}
		})

	})
</script>
<!-- =========================== -->
<!-- ==== WUFOO FORM SCRIPT ==== -->
<!-- =========================== -->
<script>
addEvent(window, 'load', initForm);

var highlight_array = new Array();

function initForm(){
	initializeFocus();
	var activeForm = document.getElementsByTagName('form')[0];
	addEvent(activeForm, 'submit', disableSubmitButton);
	ifInstructs();
	showRangeCounters();
}

function disableSubmitButton() {
	document.getElementById('saveForm').disabled = true;
}

// for radio and checkboxes, they have to be cleared manually, so they are added to the
// global array highlight_array so we dont have to loop through the dom every time.
function initializeFocus(){
	var fields = getElementsByClassName(document, "*", "field");
	
	for(i = 0; i < fields.length; i++) {
		if(fields[i].type == 'radio' || fields[i].type == 'checkbox') {
			fields[i].onclick = function() {highlight(this, 4);};
			fields[i].onfocus = function() {highlight(this, 4);};
		}
		else if(fields[i].className.match('addr') || fields[i].className.match('other')) {
			fields[i].onfocus = function(){highlight(this, 3);};
		}
		else {
			fields[i].onfocus = function(){highlight(this, 2); };
		}
	}
}

function highlight(el, depth){
	if(depth == 2){var fieldContainer = el.parentNode.parentNode;}
	if(depth == 3){var fieldContainer = el.parentNode.parentNode.parentNode;}
	if(depth == 4){var fieldContainer = el.parentNode.parentNode.parentNode.parentNode;}
	
	addClassName(fieldContainer, 'focused', true);
	var focusedFields = getElementsByClassName(document, "*", "focused");
	
	for(i = 0; i < focusedFields.length; i++) {
		if(focusedFields[i] != fieldContainer){
			removeClassName(focusedFields[i], 'focused');
		}
	}
}

function ifInstructs(){
	var container = document.getElementById('public');
	if(container){
		removeClassName(container,'noI');
		var instructs = getElementsByClassName(document,"*","instruct");
		if(instructs == ''){
			addClassName(container,'noI',true);
		}
		if(container.offsetWidth <= 450){
			addClassName(container,'altInstruct',true);
		}
	}
}

function showRangeCounters(){
	counters = getElementsByClassName(document, "em", "currently");
	for(i = 0; i < counters.length; i++) {
		counters[i].style.display = 'inline';
	}
}

function validateRange(ColumnId, RangeType) {
	if(document.getElementById('rangeUsedMsg'+ColumnId)) {
		var field = document.getElementById('Field'+ColumnId);
		var msg = document.getElementById('rangeUsedMsg'+ColumnId);

		switch(RangeType) {
			case 'character':
				msg.innerHTML = field.value.length;
				break;
				
			case 'word':
				var val = field.value;
				val = val.replace(/\n/g, " ");
				var words = val.split(" ");
				var used = 0;
				for(i =0; i < words.length; i++) {
					if(words[i].replace(/\s+$/,"") != "") used++;
				}
				msg.innerHTML = used;
				break;
				
			case 'digit':
				msg.innerHTML = field.value.length;
				break;
		}
	}
}

/*--------------------------------------------------------------------------*/

//http://www.robertnyman.com/2005/11/07/the-ultimate-getelementsbyclassname/
function getElementsByClassName(oElm, strTagName, strClassName){
	var arrElements = (strTagName == "*" && oElm.all)? oElm.all : oElm.getElementsByTagName(strTagName);
	var arrReturnElements = new Array();
	strClassName = strClassName.replace(/\-/g, "\\-");
	var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
	var oElement;
	for(var i=0; i<arrElements.length; i++){
		oElement = arrElements[i];		
		if(oRegExp.test(oElement.className)){
			arrReturnElements.push(oElement);
		}	
	}
	return (arrReturnElements)
}

//http://www.bigbold.com/snippets/posts/show/2630
function addClassName(objElement, strClass, blnMayAlreadyExist){
   if ( objElement.className ){
      var arrList = objElement.className.split(' ');
      if ( blnMayAlreadyExist ){
         var strClassUpper = strClass.toUpperCase();
         for ( var i = 0; i < arrList.length; i++ ){
            if ( arrList[i].toUpperCase() == strClassUpper ){
               arrList.splice(i, 1);
               i--;
             }
           }
      }
      arrList[arrList.length] = strClass;
      objElement.className = arrList.join(' ');
   }
   else{  
      objElement.className = strClass;
      }
}

//http://www.bigbold.com/snippets/posts/show/2630
function removeClassName(objElement, strClass){
   if ( objElement.className ){
      var arrList = objElement.className.split(' ');
      var strClassUpper = strClass.toUpperCase();
      for ( var i = 0; i < arrList.length; i++ ){
         if ( arrList[i].toUpperCase() == strClassUpper ){
            arrList.splice(i, 1);
            i--;
         }
      }
      objElement.className = arrList.join(' ');
   }
}

//http://ejohn.org/projects/flexible-javascript-events/
function addEvent( obj, type, fn ) {
  if ( obj.attachEvent ) {
    obj["e"+type+fn] = fn;
    obj[type+fn] = function() { obj["e"+type+fn]( window.event ) };
    obj.attachEvent( "on"+type, obj[type+fn] );
  } 
  else{
    obj.addEventListener( type, fn, false );	
  }
}
</script>